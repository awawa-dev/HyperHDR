/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_PROTO_MESSAGE_PB_H_INCLUDED
#define PB_PROTO_MESSAGE_PB_H_INCLUDED
#include <nanopb/pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _proto_HyperhdrRequest_Command { 
    proto_HyperhdrRequest_Command_COLOR = 1, 
    proto_HyperhdrRequest_Command_IMAGE = 2, 
    proto_HyperhdrRequest_Command_CLEAR = 3, 
    proto_HyperhdrRequest_Command_CLEARALL = 4 
} proto_HyperhdrRequest_Command;

typedef enum _proto_HyperhdrReply_Type { 
    proto_HyperhdrReply_Type_REPLY = 1, 
    proto_HyperhdrReply_Type_VIDEO = 2 
} proto_HyperhdrReply_Type;

/* Struct definitions */
typedef struct _proto_ClearRequest { 
    /* priority which need to be cleared */
    int32_t priority; 
} proto_ClearRequest;

typedef struct _proto_ColorRequest { 
    /* priority to use when setting the color */
    int32_t priority; 
    /* integer value containing the rgb color (0x00RRGGBB) */
    int32_t RgbColor; 
    /* duration of the request (negative results in infinite) */
    bool has_duration;
    int32_t duration; 
} proto_ColorRequest;

typedef struct _proto_HyperhdrReply { 
    /* Identifies which field is filled in. */
    proto_HyperhdrReply_Type type; 
    /* flag indication success or failure */
    bool has_success;
    bool success; 
    /* string indicating the reason for failure (if applicable) */
    pb_callback_t error; 
    /* Proto Messages for video mode */
    bool has_video;
    int32_t video; 
} proto_HyperhdrReply;

typedef struct _proto_HyperhdrRequest { 
    /* command specification */
    proto_HyperhdrRequest_Command command; 
    pb_extension_t *extensions; 
} proto_HyperhdrRequest;

typedef struct _proto_ImageRequest { 
    /* priority to use when setting the image */
    int32_t priority; 
    /* width of the image */
    int32_t imagewidth; 
    /* height of the image */
    int32_t imageheight; 
    /* image data */
    pb_callback_t imagedata; 
    /* duration of the request (negative results in infinite) */
    bool has_duration;
    int32_t duration; 
} proto_ImageRequest;


/* Extensions */
#ifdef __cplusplus
extern "C" {
#endif

extern const pb_extension_type_t proto_ColorRequest_colorRequest; /* field type: proto_ColorRequest colorRequest; */
extern const pb_extension_type_t proto_ImageRequest_imageRequest; /* field type: proto_ImageRequest imageRequest; */
extern const pb_extension_type_t proto_ClearRequest_clearRequest; /* field type: proto_ClearRequest clearRequest; */

#ifdef __cplusplus
} /* extern "C" */
#endif

/* Helper constants for enums */
#define _proto_HyperhdrRequest_Command_MIN proto_HyperhdrRequest_Command_COLOR
#define _proto_HyperhdrRequest_Command_MAX proto_HyperhdrRequest_Command_CLEARALL
#define _proto_HyperhdrRequest_Command_ARRAYSIZE ((proto_HyperhdrRequest_Command)(proto_HyperhdrRequest_Command_CLEARALL+1))

#define _proto_HyperhdrReply_Type_MIN proto_HyperhdrReply_Type_REPLY
#define _proto_HyperhdrReply_Type_MAX proto_HyperhdrReply_Type_VIDEO
#define _proto_HyperhdrReply_Type_ARRAYSIZE ((proto_HyperhdrReply_Type)(proto_HyperhdrReply_Type_VIDEO+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define proto_HyperhdrRequest_init_default       {_proto_HyperhdrRequest_Command_MIN, NULL}
#define proto_ColorRequest_init_default          {0, 0, false, 0}
#define proto_ImageRequest_init_default          {0, 0, 0, {{NULL}, NULL}, false, 0}
#define proto_ClearRequest_init_default          {0}
#define proto_HyperhdrReply_init_default         {_proto_HyperhdrReply_Type_MIN, false, 0, {{NULL}, NULL}, false, 0}
#define proto_HyperhdrRequest_init_zero          {_proto_HyperhdrRequest_Command_MIN, NULL}
#define proto_ColorRequest_init_zero             {0, 0, false, 0}
#define proto_ImageRequest_init_zero             {0, 0, 0, {{NULL}, NULL}, false, 0}
#define proto_ClearRequest_init_zero             {0}
#define proto_HyperhdrReply_init_zero            {_proto_HyperhdrReply_Type_MIN, false, 0, {{NULL}, NULL}, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define proto_ClearRequest_priority_tag          1
#define proto_ColorRequest_priority_tag          1
#define proto_ColorRequest_RgbColor_tag          2
#define proto_ColorRequest_duration_tag          3
#define proto_HyperhdrReply_type_tag             1
#define proto_HyperhdrReply_success_tag          2
#define proto_HyperhdrReply_error_tag            3
#define proto_HyperhdrReply_video_tag            4
#define proto_HyperhdrRequest_command_tag        1
#define proto_ImageRequest_priority_tag          1
#define proto_ImageRequest_imagewidth_tag        2
#define proto_ImageRequest_imageheight_tag       3
#define proto_ImageRequest_imagedata_tag         4
#define proto_ImageRequest_duration_tag          5
#define proto_ColorRequest_colorRequest_tag      10
#define proto_ImageRequest_imageRequest_tag      11
#define proto_ClearRequest_clearRequest_tag      12

/* Struct field encoding specification for nanopb */
#define proto_HyperhdrRequest_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    command,           1) \
X(a, CALLBACK, OPTIONAL, EXTENSION, extensions,       10)
#define proto_HyperhdrRequest_CALLBACK pb_default_field_callback
#define proto_HyperhdrRequest_DEFAULT (const pb_byte_t*)"\x08\x01\x00"

#define proto_ColorRequest_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT32,    priority,          1) \
X(a, STATIC,   REQUIRED, INT32,    RgbColor,          2) \
X(a, STATIC,   OPTIONAL, INT32,    duration,          3)
#define proto_ColorRequest_CALLBACK NULL
#define proto_ColorRequest_DEFAULT NULL

#define proto_ImageRequest_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT32,    priority,          1) \
X(a, STATIC,   REQUIRED, INT32,    imagewidth,        2) \
X(a, STATIC,   REQUIRED, INT32,    imageheight,       3) \
X(a, CALLBACK, REQUIRED, BYTES,    imagedata,         4) \
X(a, STATIC,   OPTIONAL, INT32,    duration,          5)
#define proto_ImageRequest_CALLBACK pb_default_field_callback
#define proto_ImageRequest_DEFAULT NULL

#define proto_ClearRequest_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT32,    priority,          1)
#define proto_ClearRequest_CALLBACK NULL
#define proto_ClearRequest_DEFAULT NULL

#define proto_HyperhdrReply_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    type,              1) \
X(a, STATIC,   OPTIONAL, BOOL,     success,           2) \
X(a, CALLBACK, OPTIONAL, STRING,   error,             3) \
X(a, STATIC,   OPTIONAL, INT32,    video,             4)
#define proto_HyperhdrReply_CALLBACK pb_default_field_callback
#define proto_HyperhdrReply_DEFAULT (const pb_byte_t*)"\x08\x01\x00"

extern const pb_msgdesc_t proto_HyperhdrRequest_msg;
extern const pb_msgdesc_t proto_ColorRequest_msg;
extern const pb_msgdesc_t proto_ImageRequest_msg;
extern const pb_msgdesc_t proto_ClearRequest_msg;
extern const pb_msgdesc_t proto_HyperhdrReply_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define proto_HyperhdrRequest_fields &proto_HyperhdrRequest_msg
#define proto_ColorRequest_fields &proto_ColorRequest_msg
#define proto_ImageRequest_fields &proto_ImageRequest_msg
#define proto_ClearRequest_fields &proto_ClearRequest_msg
#define proto_HyperhdrReply_fields &proto_HyperhdrReply_msg

/* Maximum encoded size of messages (where known) */
/* proto_ImageRequest_size depends on runtime parameters */
/* proto_HyperhdrReply_size depends on runtime parameters */
#define proto_ClearRequest_size                  11
#define proto_ColorRequest_size                  33
#define proto_HyperhdrRequest_size               2

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
