pre_install() {


	# search for users in system, returns first entry
	FOUND_USR=`who | grep -o -m1 '^\w*\b'` || "root"

	# stop running daemon before we install
	if pgrep hyperhdr > /dev/null 2>&1
	then
		if grep -m1 systemd /proc/1/comm > /dev/null
		then
			echo "--> stop init deamon: systemd"
			# systemd
			systemctl stop hyperhdr"@${FOUND_USR}" 2> /dev/null

		elif [ -e /usr/bin/initctl ]
		then
			echo "--> stop init deamon: upstart"
			# upstart
			initctl stop hyperhdr

		else
			echo "--> stop init deamon: sysV"
			# sysV
			service hyperhdr stop 2>/dev/null
		fi
	fi

	# In case we don't use a service kill all instances
	killall hyperhdr 2> /dev/null

	# overwrite last return code
	exit 0
}

post_install() {
	xdg-icon-resource forceupdate --theme hicolor &> /dev/null

	install_file()
	{
		src="$1"
		dest="$2"

		if [ ! -e "$dest" ]
		then
			cp "$src" "${dest}"
			return 1
		else
			echo "--> Service file already exists, skip creation"
			return 0
		fi
	}



	#check system
	CPU_RPI=`grep -m1 -c 'BCM2708\|BCM2709\|BCM2710\|BCM2835\|BCM2836\|BCM2837\|BCM2711' /proc/cpuinfo`
	CPU_X32X64=`uname -m | grep 'x86_32\|i686\|x86_64' | wc -l`

	#Check for a bootloader as Berryboot
	BOOT_BERRYBOOT=$(grep -m1 -c '\(/var/media\|/media/pi\)/berryboot' /etc/mtab)

	#get current system ip
	NET_IP=`hostname -I | cut -d " " -f1`

	# search for users in system, returns first entry
	FOUND_USR=`who | grep -o -m1 '^\w*\b'` || "root"

	# determine if we should use a service
	ENABLE_XSYS=0
	ENABLE_SERVICE=0
	STARTUP_MSG="echo ---> You can start HyperHDR from your menu now"

	if [ $CPU_RPI -eq 1 ]; then
		ENABLE_SERVICE=1
		STARTUP_MSG="echo ---> HyperHDR has been installed as service, it will start on each system startup"
	fi

	start_msg=""
	restart_msg=""

	echo "Extracting LUT table..."
	tar -xf /usr/share/hyperhdr/lut/lut_lin_tables.tar.xz -C /usr/share/hyperhdr/lut/
	rm -f -v /usr/share/hyperhdr/lut/lut_lin_tables.tar.xz

	if grep -m1 systemd /proc/1/comm > /dev/null
	then
		# systemd
		if [ -z "${DISPLAY}" ]; then
			echo "---> Init deamon: systemd (service is enabled by default for console systems)"
			ENABLE_SERVICE=1
		else
			STARTUP_MSG="echo ---> Service is NOT enabled by default for GUI systems. You can run HyperHDR as an application or service with: 'systemctl enable (and next: start) hyperhdr@${FOUND_USR}.service'"
			echo "---> Init deamon: GUI detected (service is NOT enabled by default, you can run HyperHDR as an application or service with 'systemctl enable (and next: start) hyperhdr@${FOUND_USR}.service')"
			ENABLE_SERVICE=0
			ENABLE_XSYS=1
		fi

		install_file /usr/share/hyperhdr/service/hyperhdr.systemd /etc/systemd/system/hyperhdr@.service

		if [ $ENABLE_SERVICE -eq 1 ]; then
			systemctl enable hyperhdr"@${FOUND_USR}".service
			start_msg="--> systemctl start hyperhdr for user ${FOUND_USR}"
			systemctl start hyperhdr"@${FOUND_USR}"
		fi

	elif [ -e /usr/bin/initctl ]
	then
		# upstart
		if [ $ENABLE_SERVICE -eq 1 ]; then
			echo "---> Init deamon: upstart (service is enabled by default)"
			install_file /usr/share/hyperhdr/service/hyperhdr.initctl /etc/init/hyperhdr.conf && initctl reload-configuration
			start_msg="--> initctl start hyperhdr"
			initctl start hyperhdr
		else
			echo "---> Init deamon: upstart (service is NOT enabled by default)"
		fi

	else
		# sysV
		if [ $ENABLE_SERVICE -eq 1 ]; then
			echo "---> Init deamon: sysV (enabled by default)"
			install_file /usr/share/hyperhdr/service/hyperhdr.init /etc/init.d/hyperhdr && chmod +x /etc/init.d/hyperhdr && update-rc.d hyperhdr defaults 98 02
			start_msg="---> service hyperhdr start"
			service hyperhdr start
		else
			echo "---> Init deamon: sysV (service is NOT enabled by default)"
		fi
	fi

	#cleanup
	rm -r /usr/share/hyperhdr/service

	#link binarys and set exec bit
	BINSP=/usr/share/hyperhdr/bin
	BINTP=/usr/bin
	chmod +x -R $BINSP
	ln -fs $BINSP/hyperhdr $BINTP/hyperhdr
	ln -fs $BINSP/hyperhdr-remote $BINTP/hyperhdr-remote

	# install desktop icons
	echo "---> Install HyperHdr desktop icons"
	mkdir /usr/share/pixmaps/hyperhdr 2>/dev/null
	cp /usr/share/hyperhdr/desktop/*.png /usr/share/pixmaps/hyperhdr 2>/dev/null
	desktop-file-install /usr/share/hyperhdr/desktop/hyperhdr.desktop 2>/dev/null

	# cleanup desktop icons
	rm -r /usr/share/hyperhdr/desktop 2>/dev/null

	#Check, if dtparam=spi=on is in place
	if [ $CPU_RPI -eq 1 ]; then
		BOOT_DIR="/boot"
		if [ $BOOT_BERRYBOOT -eq 1 ]; then
			BOOT_DIR=$(sed -ne "s#/dev/mmcblk0p1 \([^ ]*\) vfat rw,.*#\1#p" /etc/mtab)
		fi
		if [ -z "$BOOT_DIR" -o ! -f "$BOOT_DIR/config.txt" ]; then
			echo '---> Warning: RPi using BERRYBOOT found but can not locate where config.txt is to enable SPI. (BOOT_DIR='"$BOOT_DIR)"
			SPIOK=1 # Not sure if OK, but don't ask to reboot
		else
			SPIOK=`grep '^\dtparam=spi=on' "$BOOT_DIR/config.txt" | wc -l`
			if [ $SPIOK -ne 1 ]; then
				echo '---> Raspberry Pi found, but SPI is not set, we write "dtparam=spi=on" to '"$BOOT_DIR/config.txt"
				sed -i '$a dtparam=spi=on' "$BOOT_DIR/config.txt"
				REBOOTMESSAGE="echo Please reboot your Raspberry Pi, we inserted dtparam=spi=on to $BOOT_DIR/config.txt"
			fi
		fi
	fi

	echo ${start_msg}

	echo "-----------------------------------------------------------------------------"
	echo "---> HyperHDR has been installed/updated!"
	echo "---> Please check log above to verify if the service was automaticly enabled"
	$STARTUP_MSG
	echo "---> For configuration, visit with your browser: ${NET_IP}:8090"
	echo "---> or if already used by another service try: ${NET_IP}:8091"
	$REBOOTMESSAGE
	echo "-----------------------------------------------------------------------------"
	echo "Webpage: https://github.com/awawa-dev/HyperHDR"
	echo "-----------------------------------------------------------------------------"

	update-desktop-database -q
}

pre_upgrade() {
	pre_install
}

post_upgrade() {
	post_install
}

pre_remove() {


	# search for users in system, returns first entry
	FOUND_USR=`who | grep -o -m1 '^\w*\b'` || "root"

	# stop running daemon before we delete it
	HYPERHDR_RUNNING=false
	pgrep hyperhdr > /dev/null 2>&1 && HYPERHDR_RUNNING=true

	if grep -m1 systemd /proc/1/comm > /dev/null
	then
		echo "---> stop init deamon: systemd"
		# systemd
		$HYPERHDR_RUNNING && systemctl stop hyperhdr"@${FOUND_USR}" 2> /dev/null
		# disable user specific symlink
		echo "---> Disable service and remove entry"
		systemctl -q disable hyperhdr"@${FOUND_USR}"

		rm -v /etc/systemd/system/hyperhdr@.service 2>/dev/null

	elif [ -e /usr/bin/initctl ]
	then
		echo "---> stop init deamon: upstart"
		# upstart
		$HYPERHDR_RUNNING && initctl stop hyperhdr
		echo "---> Remove upstart service"
		rm -v /etc/init/hyperhdr* 2>/dev/null
		initctl reload-configuration

	else
		echo "---> stop init deamon: sysV"
		# sysV
		$HYPERHDR_RUNNING && service hyperhdr stop 2>/dev/null
		echo "---> Remove sysV service"
		update-rc.d -f hyperhdr remove
		rm /etc/init.d/hyperhdr* 2>/dev/null
	fi

	# In case we don't use a service kill all instances
	killall hyperhdr 2> /dev/null

	# delete desktop icons; desktop-file-edit is a workaround to hide the entry and delete it afterwards manual.
	# TODO Better way for deletion and keep the desktop in sync without logout/login or desktop dependend cmds?
	echo "---> Delete HyperHdr desktop icons"
	desktop-file-edit --set-key=NoDisplay --set-value=true /usr/share/applications/hyperhdr.desktop 2>/dev/null
	rm -v /usr/share/applications/hyperhdr* 2>/dev/null
	rm -rv /usr/share/pixmaps/hyperhdr 2>/dev/null

	echo "Removing LUT table..."
	rm -f -v /usr/share/hyperhdr/lut/lut_lin_tables.3d
	exit 0
}

post_remove() {
	xdg-icon-resource forceupdate --theme hicolor &> /dev/null
	update-desktop-database -q
}
